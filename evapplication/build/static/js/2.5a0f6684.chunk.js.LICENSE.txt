/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/*!
         * Signature Pad v2.3.2
         * https://github.com/szimek/signature_pad
         *
         * Copyright 2017 Szymon Nowak
         * Released under the MIT license
         *
         * The main idea and some parts of the code (e.g. drawing variable width Bézier curve) are taken from:
         * http://corner.squareup.com/2012/07/smoother-signatures.html
         *
         * Implementation of interpolation using cubic Bézier curves is taken from:
         * http://benknowscode.wordpress.com/2012/09/14/path-interpolation-using-cubic-bezier-and-control-point-estimation-in-javascript
         *
         * Algorithm for approximated length of a Bézier curve is taken from:
         * http://www.lemoda.net/maths/bezier-length/index.html
         *
         */

/*!
   * Sizzle CSS Selector Engine v2.3.6
   * https://sizzlejs.com/
   *
   * Copyright JS Foundation and other contributors
   * Released under the MIT license
   * https://js.foundation/
   *
   * Date: 2021-02-16
   */

/*!
 * dist/inputmask
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2021 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.6
 */

/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */

/*!
 * surveyjs - Survey JavaScript library v1.8.50
 * Copyright (c) 2015-2021 Devsoft Baltic OÜ  - http://surveyjs.io/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

/*! ../../../element-factory */

/*! ../../../reactquestion_element */

/*! ../../action-bar */

/*! ../../base */

/*! ../../calculatedValue */

/*! ../../choicesRestful */

/*! ../../conditionProcessValue */

/*! ../../conditions */

/*! ../../conditionsParser */

/*! ../../defaultCss/cssstandard */

/*! ../../dxSurveyService */

/*! ../../element-factory */

/*! ../../error */

/*! ../../expressionItems */

/*! ../../expressions/expressions */

/*! ../../flowpanel */

/*! ../../functionsfactory */

/*! ../../helpers */

/*! ../../itemvalue */

/*! ../../jsonobject */

/*! ../../list */

/*! ../../localizablestring */

/*! ../../localization/arabic */

/*! ../../localization/bulgarian */

/*! ../../localization/catalan */

/*! ../../localization/croatian */

/*! ../../localization/czech */

/*! ../../localization/danish */

/*! ../../localization/dutch */

/*! ../../localization/english */

/*! ../../localization/estonian */

/*! ../../localization/finnish */

/*! ../../localization/french */

/*! ../../localization/georgian */

/*! ../../localization/german */

/*! ../../localization/greek */

/*! ../../localization/hebrew */

/*! ../../localization/hindi */

/*! ../../localization/hungarian */

/*! ../../localization/icelandic */

/*! ../../localization/indonesian */

/*! ../../localization/italian */

/*! ../../localization/japanese */

/*! ../../localization/korean */

/*! ../../localization/latvian */

/*! ../../localization/lithuanian */

/*! ../../localization/macedonian */

/*! ../../localization/norwegian */

/*! ../../localization/persian */

/*! ../../localization/polish */

/*! ../../localization/portuguese */

/*! ../../localization/portuguese-br */

/*! ../../localization/romanian */

/*! ../../localization/russian */

/*! ../../localization/serbian */

/*! ../../localization/simplified-chinese */

/*! ../../localization/spanish */

/*! ../../localization/swahili */

/*! ../../localization/swedish */

/*! ../../localization/tajik */

/*! ../../localization/thai */

/*! ../../localization/traditional-chinese */

/*! ../../localization/turkish */

/*! ../../localization/ukrainian */

/*! ../../localization/welsh */

/*! ../../main.scss */

/*! ../../page */

/*! ../../panel */

/*! ../../popup */

/*! ../../question */

/*! ../../questionCustomWidgets */

/*! ../../question_baseselect */

/*! ../../question_boolean */

/*! ../../question_buttongroup */

/*! ../../question_checkbox */

/*! ../../question_comment */

/*! ../../question_custom */

/*! ../../question_dropdown */

/*! ../../question_empty */

/*! ../../question_expression */

/*! ../../question_file */

/*! ../../question_html */

/*! ../../question_image */

/*! ../../question_imagepicker */

/*! ../../question_matrix */

/*! ../../question_matrixdropdown */

/*! ../../question_matrixdropdownbase */

/*! ../../question_matrixdynamic */

/*! ../../question_multipletext */

/*! ../../question_paneldynamic */

/*! ../../question_radiogroup */

/*! ../../question_ranking */

/*! ../../question_rating */

/*! ../../question_signaturepad */

/*! ../../question_text */

/*! ../../questionfactory */

/*! ../../questionnonvalue */

/*! ../../reactquestion_element */

/*! ../../settings */

/*! ../../stylesmanager */

/*! ../../survey */

/*! ../../surveyProgressButtons */

/*! ../../surveyStrings */

/*! ../../surveyWindow */

/*! ../../surveytimer */

/*! ../../template-renderer */

/*! ../../textPreProcessor */

/*! ../../trigger */

/*! ../../utils/is-mobile */

/*! ../../utils/utils */

/*! ../../validator */

/*! ../action-bar/action-bar */

/*! ../conditionProcessValue */

/*! ../defaultCss/cssbootstrap */

/*! ../defaultCss/cssbootstrapmaterial */

/*! ../defaultCss/cssmodern */

/*! ../defaultCss/cssstandard */

/*! ../functionsfactory */

/*! ../helpers */

/*! ../popup/popup */

/*! ../react/boolean */

/*! ../react/boolean-checkbox */

/*! ../react/components/action-bar/action-bar */

/*! ../react/components/default-title/default-title */

/*! ../react/components/list/list */

/*! ../react/components/matrix-actions/detail-button/detail-button */

/*! ../react/components/matrix-actions/remove-button/remove-button */

/*! ../react/components/popup/popup */

/*! ../react/components/svg-icon/svg-icon */

/*! ../react/components/title-actions/title-actions */

/*! ../react/element-factory */

/*! ../react/flow-panel */

/*! ../react/image */

/*! ../react/imagepicker */

/*! ../react/page */

/*! ../react/panel */

/*! ../react/reactSurvey */

/*! ../react/reactSurveyNavigation */

/*! ../react/reactSurveyNavigationBase */

/*! ../react/reactSurveyProgress */

/*! ../react/reactSurveyProgressButtons */

/*! ../react/reactSurveyWindow */

/*! ../react/reactquestion */

/*! ../react/reactquestion_buttongroup */

/*! ../react/reactquestion_checkbox */

/*! ../react/reactquestion_comment */

/*! ../react/reactquestion_custom */

/*! ../react/reactquestion_dropdown */

/*! ../react/reactquestion_element */

/*! ../react/reactquestion_empty */

/*! ../react/reactquestion_expression */

/*! ../react/reactquestion_factory */

/*! ../react/reactquestion_file */

/*! ../react/reactquestion_html */

/*! ../react/reactquestion_matrix */

/*! ../react/reactquestion_matrixdropdown */

/*! ../react/reactquestion_matrixdropdownbase */

/*! ../react/reactquestion_matrixdynamic */

/*! ../react/reactquestion_multipletext */

/*! ../react/reactquestion_paneldynamic */

/*! ../react/reactquestion_radiogroup */

/*! ../react/reactquestion_ranking */

/*! ../react/reactquestion_rating */

/*! ../react/reactquestion_text */

/*! ../react/reactsurveymodel */

/*! ../react/reacttimerpanel */

/*! ../react/row */

/*! ../react/signaturepad */

/*! ../react/string-editor */

/*! ../react/string-viewer */

/*! ../rendererFactory */

/*! ../surveyStrings */

/*! ../svg-icon/svg-icon */

/*! ../title-content/title-content */

/*! ../utils/responsivitymanager */

/*! ../utils/utils */

/*! ./../settings */

/*! ./action-bar */

/*! ./action-bar-item */

/*! ./action-bar-item-dropdown */

/*! ./action-bar-separator */

/*! ./base */

/*! ./boolean */

/*! ./choicesRestful */

/*! ./chunks/localization */

/*! ./chunks/model */

/*! ./components/action-bar/action-bar */

/*! ./components/svg-icon/svg-icon */

/*! ./components/title-actions/title-actions */

/*! ./conditionProcessValue */

/*! ./conditions */

/*! ./conditionsParser */

/*! ./core */

/*! ./cssstandard */

/*! ./custom-widget */

/*! ./defaultCss/cssstandard */

/*! ./drag-drop-td */

/*! ./dxSurveyService */

/*! ./element-factory */

/*! ./error */

/*! ./expressions */

/*! ./expressions/expressionParser */

/*! ./expressions/expressions */

/*! ./functionsfactory */

/*! ./helpers */

/*! ./itemvalue */

/*! ./jsonobject */

/*! ./list */

/*! ./localizablestring */

/*! ./localization/english */

/*! ./martixBase */

/*! ./page */

/*! ./panel */

/*! ./panel-base */

/*! ./popup */

/*! ./question */

/*! ./questionCustomWidgets */

/*! ./question_baseselect */

/*! ./question_checkbox */

/*! ./question_dropdown */

/*! ./question_expression */

/*! ./question_matrixdropdownbase */

/*! ./question_text */

/*! ./questionfactory */

/*! ./questionnonvalue */

/*! ./react-ui */

/*! ./reactSurvey */

/*! ./reactSurveyNavigation */

/*! ./reactSurveyNavigationBase */

/*! ./reactquestion */

/*! ./reactquestion_checkbox */

/*! ./reactquestion_comment */

/*! ./reactquestion_element */

/*! ./reactquestion_factory */

/*! ./reactquestion_matrixdropdownbase */

/*! ./reactquestion_radiogroup */

/*! ./reactsurveymodel */

/*! ./reacttimerpanel */

/*! ./rendererFactory */

/*! ./row */

/*! ./settings */

/*! ./string-viewer */

/*! ./stylesmanager */

/*! ./survey */

/*! ./surveyStrings */

/*! ./surveytimer */

/*! ./textPreProcessor */

/*! ./utils/is-mobile */

/*! ./utils/popup */

/*! ./utils/utils */

/*! ./validator */

/*! =======================================================
                      VERSION  10.6.2              
========================================================= */

/*! exports provided: ActionBarItem, AdaptiveActionBarItemWrapper, AdaptiveElement, ActionBar */

/*! exports provided: AnswerRequiredError, OneAnswerRequiredError, RequreNumericError, ExceedSizeError, WebRequestError, WebRequestEmptyError, OtherEmptyError, UploadingFileError, RequiredInAllRowsError, MinRowCountError, KeyDuplicationError, CustomError */

/*! exports provided: Bindings, Base, ArrayChanges, SurveyError, SurveyElement, Event, EventBase */

/*! exports provided: ButtonGroupItemValue, QuestionButtonGroupModel, ButtonGroupItemModel */

/*! exports provided: CalculatedValue */

/*! exports provided: ChoicesRestful, ChoicesRestfull */

/*! exports provided: ComponentQuestionJSON, ComponentCollection, QuestionCustomModelBase, QuestionCustomModel, QuestionCompositeModel */

/*! exports provided: ConditionsParserError, ConditionsParser */

/*! exports provided: DefaultTitle */

/*! exports provided: DragDropInfo, QuestionRowModel, PanelModelBase, PanelModel */

/*! exports provided: ExpressionItem, HtmlConditionItem, UrlConditionItem */

/*! exports provided: ExpressionRunnerBase, ConditionRunner, ExpressionRunner */

/*! exports provided: FlowPanelModel */

/*! exports provided: FunctionFactory, registerFunction */

/*! exports provided: Helpers */

/*! exports provided: ImageItemValue, QuestionImagePickerModel */

/*! exports provided: IsMobile */

/*! exports provided: ItemValue */

/*! exports provided: List */

/*! exports provided: ListModel */

/*! exports provided: LocalizableString, LocalizableStrings */

/*! exports provided: MatrixDropdownRowModel, QuestionMatrixDropdownModel */

/*! exports provided: MatrixDynamicRowModel, QuestionMatrixDynamicModel */

/*! exports provided: MatrixRowModel, MatrixCells, QuestionMatrixModel */

/*! exports provided: MultipleTextItemModel, QuestionMultipleTextModel */

/*! exports provided: Operand, BinaryOperand, UnaryOperand, ArrayOperand, Const, Variable, FunctionOperand, OperandMaker */

/*! exports provided: PageModel */

/*! exports provided: Popup, PopupContainer, showModal */

/*! exports provided: PopupModel, PopupBaseViewModel */

/*! exports provided: PopupUtils */

/*! exports provided: ProcessValue */

/*! exports provided: Question */

/*! exports provided: QuestionBooleanModel */

/*! exports provided: QuestionCheckboxModel */

/*! exports provided: QuestionCommentModel */

/*! exports provided: QuestionCustomWidget, CustomWidgetCollection */

/*! exports provided: QuestionDropdownModel */

/*! exports provided: QuestionEmptyModel */

/*! exports provided: QuestionExpressionModel, getCurrecyCodes */

/*! exports provided: QuestionFactory, ElementFactory */

/*! exports provided: QuestionFileModel */

/*! exports provided: QuestionHtmlModel */

/*! exports provided: QuestionImageModel */

/*! exports provided: QuestionMatrixBaseModel */

/*! exports provided: QuestionNonValue */

/*! exports provided: QuestionPanelDynamicItem, QuestionPanelDynamicTemplateSurveyImpl, QuestionPanelDynamicModel */

/*! exports provided: QuestionRadiogroupModel */

/*! exports provided: QuestionRankingModel */

/*! exports provided: QuestionRatingModel */

/*! exports provided: QuestionSelectBase, QuestionCheckboxBase */

/*! exports provided: QuestionSignaturePadModel */

/*! exports provided: QuestionTextModel */

/*! exports provided: ReactElementFactory */

/*! exports provided: ReactQuestionFactory */

/*! exports provided: ReactSurveyModel, ReactWindowModel */

/*! exports provided: RendererFactory */

/*! exports provided: ResponsivityManager, VerticalResponsivityManager */

/*! exports provided: StylesManager */

/*! exports provided: Survey */

/*! exports provided: Survey, Model, WindowModel, SurveyNavigationBase, SurveyTimerPanel, SurveyNavigation, SurveyPage, SurveyRow, SurveyPanel, SurveyFlowPanel, SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell, SurveyElementBase, SurveyQuestionElementBase, SurveyQuestionCommentItem, SurveyQuestionComment, SurveyQuestionCheckbox, SurveyQuestionCheckboxItem, SurveyQuestionRanking, SurveyQuestionRankingItem, SurveyQuestionDropdown, SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionHtml, SurveyQuestionFile, SurveyQuestionMultipleText, SurveyQuestionRadiogroup, SurveyQuestionText, SurveyQuestionBoolean, SurveyQuestionBooleanCheckbox, SurveyQuestionEmpty, SurveyQuestionMatrixDropdownCell, SurveyQuestionMatrixDropdown, SurveyQuestionMatrixDynamic, SurveyQuestionPanelDynamic, SurveyProgress, SurveyProgressButtons, SurveyQuestionRating, SurveyQuestionExpression, SurveyWindow, ReactQuestionFactory, ReactElementFactory, SurveyQuestionImagePicker, SurveyQuestionImage, SurveyQuestionSignaturePad, SurveyQuestionButtonGroup, SurveyQuestionCustom, SurveyQuestionComposite, DefaultTitle, Popup, List, TitleActions, SurveyActionBar, SvgIcon, SurveyQuestionMatrixDynamicRemoveButton, SurveyQuestionMatrixDetailButton, SurveyLocStringViewer, SurveyLocStringEditor, ResponsivityManager, VerticalResponsivityManager, unwrap */

/*! exports provided: SurveyAction, SurveyActionBarItem */

/*! exports provided: SurveyAction, SurveyActionBarItem, SurveyActionBarItemDropdown, SurveyActionBarSeparator, SurveyActionBar */

/*! exports provided: SurveyActionBarItemDropdown */

/*! exports provided: SurveyActionBarSeparator */

/*! exports provided: SurveyCustomWidget */

/*! exports provided: SurveyElementBase, ReactSurveyElement, SurveyQuestionElementBase, SurveyQuestionUncontrolledElement */

/*! exports provided: SurveyFlowPanel */

/*! exports provided: SurveyLocStringEditor */

/*! exports provided: SurveyLocStringViewer */

/*! exports provided: SurveyModel */

/*! exports provided: SurveyNavigation */

/*! exports provided: SurveyNavigationBase */

/*! exports provided: SurveyPage */

/*! exports provided: SurveyPanel */

/*! exports provided: SurveyPanelBase */

/*! exports provided: SurveyProgress */

/*! exports provided: SurveyProgressButtons */

/*! exports provided: SurveyProgressButtonsModel */

/*! exports provided: SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell */

/*! exports provided: SurveyQuestionBoolean */

/*! exports provided: SurveyQuestionBooleanCheckbox */

/*! exports provided: SurveyQuestionButtonGroup, SurveyButtonGroupItem */

/*! exports provided: SurveyQuestionCheckbox, SurveyQuestionCheckboxItem */

/*! exports provided: SurveyQuestionComment, SurveyQuestionCommentItem */

/*! exports provided: SurveyQuestionCustom, SurveyQuestionComposite */

/*! exports provided: SurveyQuestionDropdown, SurveyQuestionOptionItem */

/*! exports provided: SurveyQuestionEmpty */

/*! exports provided: SurveyQuestionExpression */

/*! exports provided: SurveyQuestionFile */

/*! exports provided: SurveyQuestionHtml */

/*! exports provided: SurveyQuestionImage */

/*! exports provided: SurveyQuestionImagePicker */

/*! exports provided: SurveyQuestionMatrix, SurveyQuestionMatrixRow */

/*! exports provided: SurveyQuestionMatrixDetailButton */

/*! exports provided: SurveyQuestionMatrixDropdown */

/*! exports provided: SurveyQuestionMatrixDropdownBase, SurveyQuestionMatrixDropdownCell */

/*! exports provided: SurveyQuestionMatrixDynamic */

/*! exports provided: SurveyQuestionMatrixDynamicRemoveButton */

/*! exports provided: SurveyQuestionMultipleText */

/*! exports provided: SurveyQuestionPanelDynamic, SurveyQuestionPanelDynamicItem */

/*! exports provided: SurveyQuestionRadiogroup, SurveyQuestionRadioItem */

/*! exports provided: SurveyQuestionRanking, SurveyQuestionRankingItem */

/*! exports provided: SurveyQuestionRating */

/*! exports provided: SurveyQuestionSignaturePad */

/*! exports provided: SurveyQuestionText */

/*! exports provided: SurveyRow */

/*! exports provided: SurveyTimerPanel */

/*! exports provided: SurveyWindow */

/*! exports provided: SurveyWindowModel */

/*! exports provided: SvgIcon */

/*! exports provided: SyntaxError, parse */

/*! exports provided: TextPreProcessorItem, TextPreProcessorValue, TextPreProcessor, QuestionTextProcessor */

/*! exports provided: TitleActions */

/*! exports provided: TitleContent */

/*! exports provided: Trigger, SurveyTrigger, SurveyTriggerVisible, SurveyTriggerComplete, SurveyTriggerSetValue, SurveyTriggerSkip, SurveyTriggerRunExpression, SurveyTriggerCopyValue */

/*! exports provided: ValidatorResult, SurveyValidator, ValidatorRunner, NumericValidator, TextValidator, AnswerCountValidator, RegexValidator, EmailValidator, ExpressionValidator */

/*! exports provided: Version, settings, Helpers, AnswerCountValidator, EmailValidator, NumericValidator, RegexValidator, SurveyValidator, TextValidator, ValidatorResult, ExpressionValidator, ValidatorRunner, ItemValue, Base, Event, SurveyError, SurveyElement, ArrayChanges, CalculatedValue, CustomError, AnswerRequiredError, OneAnswerRequiredError, RequreNumericError, ExceedSizeError, LocalizableString, LocalizableStrings, HtmlConditionItem, UrlConditionItem, ChoicesRestful, ChoicesRestfull, FunctionFactory, registerFunction, ConditionRunner, ExpressionRunner, Operand, Const, BinaryOperand, Variable, FunctionOperand, ArrayOperand, ConditionsParser, ProcessValue, JsonError, JsonIncorrectTypeError, JsonMetadata, JsonMetadataClass, JsonMissingTypeError, JsonMissingTypeErrorBase, JsonObject, JsonObjectProperty, JsonRequiredPropertyError, JsonUnknownPropertyError, Serializer, property, propertyArray, MatrixDropdownCell, MatrixDropdownColumn, matrixDropdownColumnTypes, MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable, MatrixDropdownRowModel, QuestionMatrixDropdownModel, MatrixDynamicRowModel, QuestionMatrixDynamicModel, MatrixRowModel, MatrixCells, QuestionMatrixModel, MultipleTextItemModel, QuestionMultipleTextModel, PanelModel, PanelModelBase, QuestionRowModel, FlowPanelModel, PageModel, Question, QuestionNonValue, QuestionEmptyModel, QuestionCheckboxBase, QuestionSelectBase, QuestionCheckboxModel, QuestionRankingModel, QuestionCommentModel, QuestionDropdownModel, QuestionFactory, ElementFactory, QuestionFileModel, QuestionHtmlModel, QuestionRadiogroupModel, QuestionRatingModel, QuestionExpressionModel, QuestionTextModel, QuestionBooleanModel, QuestionImagePickerModel, ImageItemValue, QuestionImageModel, QuestionSignaturePadModel, QuestionPanelDynamicModel, QuestionPanelDynamicItem, SurveyTimer, SurveyProgressButtonsModel, SurveyModel, SurveyTrigger, SurveyTriggerComplete, SurveyTriggerSetValue, SurveyTriggerVisible, SurveyTriggerCopyValue, SurveyTriggerRunExpression, Trigger, SurveyWindowModel, TextPreProcessor, dxSurveyService, englishStrings, surveyLocalization, surveyStrings, QuestionCustomWidget, CustomWidgetCollection, QuestionCustomModel, QuestionCompositeModel, ComponentQuestionJSON, ComponentCollection, StylesManager, ActionBarItem, ActionBar, AdaptiveActionBarItemWrapper, AdaptiveElement, ListModel, PopupModel, PopupBaseViewModel, QuestionButtonGroupModel, ButtonGroupItemModel, ButtonGroupItemValue, IsMobile, confirmAction, detectIEOrEdge, loadFileFromBase64, createSvg, surveyCss */

/*! exports provided: Version, settings, Helpers, AnswerCountValidator, EmailValidator, NumericValidator, RegexValidator, SurveyValidator, TextValidator, ValidatorResult, ExpressionValidator, ValidatorRunner, ItemValue, Base, Event, SurveyError, SurveyElement, ArrayChanges, CalculatedValue, CustomError, AnswerRequiredError, OneAnswerRequiredError, RequreNumericError, ExceedSizeError, LocalizableString, LocalizableStrings, HtmlConditionItem, UrlConditionItem, ChoicesRestful, ChoicesRestfull, FunctionFactory, registerFunction, ConditionRunner, ExpressionRunner, Operand, Const, BinaryOperand, Variable, FunctionOperand, ArrayOperand, ConditionsParser, ProcessValue, JsonError, JsonIncorrectTypeError, JsonMetadata, JsonMetadataClass, JsonMissingTypeError, JsonMissingTypeErrorBase, JsonObject, JsonObjectProperty, JsonRequiredPropertyError, JsonUnknownPropertyError, Serializer, property, propertyArray, MatrixDropdownCell, MatrixDropdownColumn, matrixDropdownColumnTypes, MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable, MatrixDropdownRowModel, QuestionMatrixDropdownModel, MatrixDynamicRowModel, QuestionMatrixDynamicModel, MatrixRowModel, MatrixCells, QuestionMatrixModel, MultipleTextItemModel, QuestionMultipleTextModel, PanelModel, PanelModelBase, QuestionRowModel, FlowPanelModel, PageModel, Question, QuestionNonValue, QuestionEmptyModel, QuestionCheckboxBase, QuestionSelectBase, QuestionCheckboxModel, QuestionRankingModel, QuestionCommentModel, QuestionDropdownModel, QuestionFactory, ElementFactory, QuestionFileModel, QuestionHtmlModel, QuestionRadiogroupModel, QuestionRatingModel, QuestionExpressionModel, QuestionTextModel, QuestionBooleanModel, QuestionImagePickerModel, ImageItemValue, QuestionImageModel, QuestionSignaturePadModel, QuestionPanelDynamicModel, QuestionPanelDynamicItem, SurveyTimer, SurveyProgressButtonsModel, SurveyModel, SurveyTrigger, SurveyTriggerComplete, SurveyTriggerSetValue, SurveyTriggerVisible, SurveyTriggerCopyValue, SurveyTriggerRunExpression, Trigger, SurveyWindowModel, TextPreProcessor, dxSurveyService, englishStrings, surveyLocalization, surveyStrings, QuestionCustomWidget, CustomWidgetCollection, QuestionCustomModel, QuestionCompositeModel, ComponentQuestionJSON, ComponentCollection, StylesManager, ActionBarItem, ActionBar, AdaptiveActionBarItemWrapper, AdaptiveElement, ListModel, PopupModel, PopupBaseViewModel, QuestionButtonGroupModel, ButtonGroupItemModel, ButtonGroupItemValue, IsMobile, confirmAction, detectIEOrEdge, loadFileFromBase64, createSvg, surveyCss, defaultStandardCss, defaultBootstrapCss, defaultBootstrapMaterialCss, modernCss, RendererFactory, ResponsivityManager, VerticalResponsivityManager, unwrap */

/*! exports provided: Version, settings, Helpers, AnswerCountValidator, EmailValidator, NumericValidator, RegexValidator, SurveyValidator, TextValidator, ValidatorResult, ExpressionValidator, ValidatorRunner, ItemValue, Base, Event, SurveyError, SurveyElement, ArrayChanges, CalculatedValue, CustomError, AnswerRequiredError, OneAnswerRequiredError, RequreNumericError, ExceedSizeError, LocalizableString, LocalizableStrings, HtmlConditionItem, UrlConditionItem, ChoicesRestful, ChoicesRestfull, FunctionFactory, registerFunction, ConditionRunner, ExpressionRunner, Operand, Const, BinaryOperand, Variable, FunctionOperand, ArrayOperand, ConditionsParser, ProcessValue, JsonError, JsonIncorrectTypeError, JsonMetadata, JsonMetadataClass, JsonMissingTypeError, JsonMissingTypeErrorBase, JsonObject, JsonObjectProperty, JsonRequiredPropertyError, JsonUnknownPropertyError, Serializer, property, propertyArray, MatrixDropdownCell, MatrixDropdownColumn, matrixDropdownColumnTypes, MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable, MatrixDropdownRowModel, QuestionMatrixDropdownModel, MatrixDynamicRowModel, QuestionMatrixDynamicModel, MatrixRowModel, MatrixCells, QuestionMatrixModel, MultipleTextItemModel, QuestionMultipleTextModel, PanelModel, PanelModelBase, QuestionRowModel, FlowPanelModel, PageModel, Question, QuestionNonValue, QuestionEmptyModel, QuestionCheckboxBase, QuestionSelectBase, QuestionCheckboxModel, QuestionRankingModel, QuestionCommentModel, QuestionDropdownModel, QuestionFactory, ElementFactory, QuestionFileModel, QuestionHtmlModel, QuestionRadiogroupModel, QuestionRatingModel, QuestionExpressionModel, QuestionTextModel, QuestionBooleanModel, QuestionImagePickerModel, ImageItemValue, QuestionImageModel, QuestionSignaturePadModel, QuestionPanelDynamicModel, QuestionPanelDynamicItem, SurveyTimer, SurveyProgressButtonsModel, SurveyModel, SurveyTrigger, SurveyTriggerComplete, SurveyTriggerSetValue, SurveyTriggerVisible, SurveyTriggerCopyValue, SurveyTriggerRunExpression, Trigger, SurveyWindowModel, TextPreProcessor, dxSurveyService, englishStrings, surveyLocalization, surveyStrings, QuestionCustomWidget, CustomWidgetCollection, QuestionCustomModel, QuestionCompositeModel, ComponentQuestionJSON, ComponentCollection, StylesManager, ActionBarItem, ActionBar, AdaptiveActionBarItemWrapper, AdaptiveElement, ListModel, PopupModel, PopupBaseViewModel, QuestionButtonGroupModel, ButtonGroupItemModel, ButtonGroupItemValue, IsMobile, confirmAction, detectIEOrEdge, loadFileFromBase64, createSvg, surveyCss, defaultStandardCss, defaultBootstrapCss, defaultBootstrapMaterialCss, modernCss, RendererFactory, ResponsivityManager, VerticalResponsivityManager, unwrap, Survey, Model, WindowModel, SurveyNavigationBase, SurveyTimerPanel, SurveyNavigation, SurveyPage, SurveyRow, SurveyPanel, SurveyFlowPanel, SurveyQuestion, SurveyElementErrors, SurveyQuestionAndErrorsCell, SurveyElementBase, SurveyQuestionElementBase, SurveyQuestionCommentItem, SurveyQuestionComment, SurveyQuestionCheckbox, SurveyQuestionCheckboxItem, SurveyQuestionRanking, SurveyQuestionRankingItem, SurveyQuestionDropdown, SurveyQuestionMatrix, SurveyQuestionMatrixRow, SurveyQuestionHtml, SurveyQuestionFile, SurveyQuestionMultipleText, SurveyQuestionRadiogroup, SurveyQuestionText, SurveyQuestionBoolean, SurveyQuestionBooleanCheckbox, SurveyQuestionEmpty, SurveyQuestionMatrixDropdownCell, SurveyQuestionMatrixDropdown, SurveyQuestionMatrixDynamic, SurveyQuestionPanelDynamic, SurveyProgress, SurveyProgressButtons, SurveyQuestionRating, SurveyQuestionExpression, SurveyWindow, ReactQuestionFactory, ReactElementFactory, SurveyQuestionImagePicker, SurveyQuestionImage, SurveyQuestionSignaturePad, SurveyQuestionButtonGroup, SurveyQuestionCustom, SurveyQuestionComposite, DefaultTitle, Popup, List, TitleActions, SurveyActionBar, SvgIcon, SurveyQuestionMatrixDynamicRemoveButton, SurveyQuestionMatrixDetailButton, SurveyLocStringViewer, SurveyLocStringEditor */

/*! exports provided: arabicSurveyStrings */

/*! exports provided: bulgarianStrings */

/*! exports provided: catalanSurveyStrings */

/*! exports provided: croatianStrings */

/*! exports provided: czechSurveyStrings */

/*! exports provided: danishSurveyStrings */

/*! exports provided: default */

/*! exports provided: default, MultiDrag, Sortable, Swap */

/*! exports provided: defaultBootstrapCss */

/*! exports provided: defaultBootstrapMaterialCss */

/*! exports provided: dragDropTD */

/*! exports provided: dutchSurveyStrings */

/*! exports provided: dxSurveyService */

/*! exports provided: englishStrings */

/*! exports provided: estonianSurveyStrings */

/*! exports provided: finnishSurveyStrings */

/*! exports provided: frenchSurveyStrings */

/*! exports provided: georgianSurveyStrings */

/*! exports provided: germanSurveyStrings */

/*! exports provided: greekSurveyStrings */

/*! exports provided: hebrewSurveyStrings */

/*! exports provided: hindiStrings */

/*! exports provided: hungarianSurveyStrings */

/*! exports provided: icelandicSurveyStrings */

/*! exports provided: indonesianStrings */

/*! exports provided: italianSurveyStrings */

/*! exports provided: japaneseSurveyStrings */

/*! exports provided: koreanStrings */

/*! exports provided: latvianSurveyStrings */

/*! exports provided: lithuaniaSurveyStrings */

/*! exports provided: macedonianSurveyStrings */

/*! exports provided: matrixDropdownColumnTypes, MatrixDropdownColumn, MatrixDropdownCell, MatrixDropdownTotalCell, MatrixDropdownRowModelBase, MatrixDropdownTotalRowModel, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable, QuestionMatrixDropdownModelBase */

/*! exports provided: modernCss */

/*! exports provided: norwegianSurveyStrings */

/*! exports provided: persianSurveyStrings */

/*! exports provided: polishSurveyStrings */

/*! exports provided: portugueseBrSurveyStrings */

/*! exports provided: portugueseSurveyStrings */

/*! exports provided: property, propertyArray, JsonObjectProperty, CustomPropertiesCollection, JsonMetadataClass, JsonMetadata, JsonError, JsonUnknownPropertyError, JsonMissingTypeErrorBase, JsonMissingTypeError, JsonIncorrectTypeError, JsonRequiredPropertyError, JsonObject, Serializer */

/*! exports provided: romanianSurveyStrings */

/*! exports provided: russianSurveyStrings */

/*! exports provided: serbianStrings */

/*! exports provided: settings */

/*! exports provided: simplifiedChineseSurveyStrings */

/*! exports provided: spanishSurveyStrings */

/*! exports provided: surveyCss, defaultStandardCss */

/*! exports provided: surveyLocalization, surveyStrings */

/*! exports provided: surveyTimerFunctions, SurveyTimer */

/*! exports provided: swahiliStrings */

/*! exports provided: swedishSurveyStrings */

/*! exports provided: tajikSurveyStrings */

/*! exports provided: thaiStrings */

/*! exports provided: traditionalChineseSurveyStrings */

/*! exports provided: turkishSurveyStrings */

/*! exports provided: ukrainianSurveyStrings */

/*! exports provided: unwrap, compareVersions, confirmAction, detectIEOrEdge, detectIEBrowser, loadFileFromBase64, isMobile, isElementVisible, findScrollableParent, createSvg */

/*! exports provided: welshSurveyStrings */

/*! no exports provided */

/*! no static exports found */

/*! nouislider - 10.1.0 - 2017-07-28 17:11:18 */

/*! react */

/*! react-dom */

/*! signature_pad */

/*! sortablejs */

/*! survey-core */

/*!*********************!*\
        !*** ./src/base.ts ***!
        \*********************/

/*!*********************!*\
        !*** ./src/list.ts ***!
        \*********************/

/*!*********************!*\
        !*** ./src/page.ts ***!
        \*********************/

/*!**********************!*\
        !*** ./src/error.ts ***!
        \**********************/

/*!**********************!*\
        !*** ./src/panel.ts ***!
        \**********************/

/*!**********************!*\
        !*** ./src/popup.ts ***!
        \**********************/

/*!***********************!*\
        !*** ./src/main.scss ***!
        \***********************/

/*!***********************!*\
        !*** ./src/survey.ts ***!
        \***********************/

/*!************************!*\
        !*** ./src/helpers.ts ***!
        \************************/

/*!************************!*\
        !*** ./src/trigger.ts ***!
        \************************/

/*!*************************!*\
        !*** ./src/question.ts ***!
        \*************************/

/*!*************************!*\
        !*** ./src/settings.ts ***!
        \*************************/

/*!**************************!*\
        !*** ./src/flowpanel.ts ***!
        \**************************/

/*!**************************!*\
        !*** ./src/itemvalue.ts ***!
        \**************************/

/*!**************************!*\
        !*** ./src/validator.ts ***!
        \**************************/

/*!***************************!*\
        !*** ./src/action-bar.ts ***!
        \***************************/

/*!***************************!*\
        !*** ./src/conditions.ts ***!
        \***************************/

/*!***************************!*\
        !*** ./src/jsonobject.ts ***!
        \***************************/

/*!***************************!*\
        !*** ./src/martixBase.ts ***!
        \***************************/

/*!***************************!*\
        !*** ./src/react/row.tsx ***!
        \***************************/

/*!****************************!*\
        !*** ./src/react/page.tsx ***!
        \****************************/

/*!****************************!*\
        !*** ./src/surveytimer.ts ***!
        \****************************/

/*!****************************!*\
        !*** ./src/utils/popup.ts ***!
        \****************************/

/*!****************************!*\
        !*** ./src/utils/utils.ts ***!
        \****************************/

/*!*****************************!*\
        !*** ./src/entries/core.ts ***!
        \*****************************/

/*!*****************************!*\
        !*** ./src/react/image.tsx ***!
        \*****************************/

/*!*****************************!*\
        !*** ./src/react/panel.tsx ***!
        \*****************************/

/*!*****************************!*\
        !*** ./src/surveyWindow.ts ***!
        \*****************************/

/*!******************************!*\
        !*** ./src/entries/react.ts ***!
        \******************************/

/*!******************************!*\
        !*** ./src/question_file.ts ***!
        \******************************/

/*!******************************!*\
        !*** ./src/question_html.ts ***!
        \******************************/

/*!******************************!*\
        !*** ./src/question_text.ts ***!
        \******************************/

/*!******************************!*\
        !*** ./src/stylesmanager.ts ***!
        \******************************/

/*!******************************!*\
        !*** ./src/surveyStrings.ts ***!
        \******************************/

/*!*******************************!*\
        !*** ./src/choicesRestful.ts ***!
        \*******************************/

/*!*******************************!*\
        !*** ./src/question_empty.ts ***!
        \*******************************/

/*!*******************************!*\
        !*** ./src/question_image.ts ***!
        \*******************************/

/*!*******************************!*\
        !*** ./src/react/boolean.tsx ***!
        \*******************************/

/*!********************************!*\
        !*** ./src/calculatedValue.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/dxSurveyService.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/expressionItems.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/question_custom.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/question_matrix.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/question_rating.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/questionfactory.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/rendererFactory.ts ***!
        \********************************/

/*!********************************!*\
        !*** ./src/utils/is-mobile.ts ***!
        \********************************/

/*!*********************************!*\
        !*** ./src/conditionsParser.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/entries/react-ui.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/functionsfactory.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/question_boolean.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/question_comment.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/question_ranking.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/questionnonvalue.ts ***!
        \*********************************/

/*!*********************************!*\
        !*** ./src/textPreProcessor.ts ***!
        \*********************************/

/*!**********************************!*\
        !*** ./src/localizablestring.ts ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/localization/thai.ts ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/question_checkbox.ts ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/question_dropdown.ts ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/react/flow-panel.tsx ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/react/panel-base.tsx ***!
        \**********************************/

/*!**********************************!*\
        !*** ./src/template-renderer.ts ***!
        \**********************************/

/*!***********************************!*\
        !*** ./src/localization/czech.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/localization/dutch.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/localization/greek.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/localization/hindi.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/localization/tajik.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/localization/welsh.ts ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/react/imagepicker.tsx ***!
        \***********************************/

/*!***********************************!*\
        !*** ./src/react/reactSurvey.tsx ***!
        \***********************************/

/*!************************************!*\
        !*** ./src/localization/arabic.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/danish.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/french.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/german.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/hebrew.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/korean.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/localization/polish.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/question_baseselect.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/question_expression.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/question_radiogroup.ts ***!
        \************************************/

/*!************************************!*\
        !*** ./src/react/drag-drop-td.tsx ***!
        \************************************/

/*!************************************!*\
        !*** ./src/react/signaturepad.tsx ***!
        \************************************/

/*!*************************************!*\
        !*** ./src/defaultCss/cssmodern.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/entries/chunks/model.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/catalan.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/english.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/finnish.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/italian.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/latvian.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/persian.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/russian.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/serbian.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/spanish.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/swahili.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/swedish.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/localization/turkish.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/question_buttongroup.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/question_imagepicker.ts ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/react/custom-widget.tsx ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/react/reactquestion.tsx ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/react/string-editor.tsx ***!
        \*************************************/

/*!*************************************!*\
        !*** ./src/react/string-viewer.tsx ***!
        \*************************************/

/*!**************************************!*\
        !*** ./src/conditionProcessValue.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/localization/croatian.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/localization/estonian.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/localization/georgian.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/localization/japanese.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/localization/romanian.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/questionCustomWidgets.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/question_multipletext.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/question_paneldynamic.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/question_signaturepad.ts ***!
        \**************************************/

/*!**************************************!*\
        !*** ./src/surveyProgressButtons.ts ***!
        \**************************************/

/*!***************************************!*\
        !*** ./src/defaultCss/cssstandard.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/localization/bulgarian.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/localization/hungarian.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/localization/icelandic.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/localization/norwegian.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/localization/ukrainian.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/question_matrixdynamic.ts ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/react/element-factory.tsx ***!
        \***************************************/

/*!***************************************!*\
        !*** ./src/react/reacttimerpanel.tsx ***!
        \***************************************/

/*!****************************************!*\
        !*** ./src/defaultCss/cssbootstrap.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/expressions/expressions.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/localization/indonesian.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/localization/lithuanian.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/localization/macedonian.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/localization/portuguese.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/question_matrixdropdown.ts ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/react/boolean-checkbox.tsx ***!
        \****************************************/

/*!****************************************!*\
        !*** ./src/react/reactsurveymodel.tsx ***!
        \****************************************/

/*!*****************************************!*\
        !*** ./src/react/reactSurveyWindow.tsx ***!
        \*****************************************/

/*!******************************************!*\
        !*** ./src/react/reactquestion_file.tsx ***!
        \******************************************/

/*!******************************************!*\
        !*** ./src/react/reactquestion_html.tsx ***!
        \******************************************/

/*!******************************************!*\
        !*** ./src/react/reactquestion_text.tsx ***!
        \******************************************/

/*!******************************************!*\
        !*** ./src/utils/responsivitymanager.ts ***!
        \******************************************/

/*!*******************************************!*\
        !*** ./src/localization/portuguese-br.ts ***!
        \*******************************************/

/*!*******************************************!*\
        !*** ./src/react/reactSurveyProgress.tsx ***!
        \*******************************************/

/*!*******************************************!*\
        !*** ./src/react/reactquestion_empty.tsx ***!
        \*******************************************/

/*!********************************************!*\
        !*** ./src/entries/chunks/localization.ts ***!
        \********************************************/

/*!********************************************!*\
        !*** ./src/question_matrixdropdownbase.ts ***!
        \********************************************/

/*!********************************************!*\
        !*** ./src/react/components/list/list.tsx ***!
        \********************************************/

/*!********************************************!*\
        !*** ./src/react/reactquestion_custom.tsx ***!
        \********************************************/

/*!********************************************!*\
        !*** ./src/react/reactquestion_matrix.tsx ***!
        \********************************************/

/*!********************************************!*\
        !*** ./src/react/reactquestion_rating.tsx ***!
        \********************************************/

/*!*********************************************!*\
        !*** ./src/expressions/expressionParser.ts ***!
        \*********************************************/

/*!*********************************************!*\
        !*** ./src/react/reactSurveyNavigation.tsx ***!
        \*********************************************/

/*!*********************************************!*\
        !*** ./src/react/reactquestion_comment.tsx ***!
        \*********************************************/

/*!*********************************************!*\
        !*** ./src/react/reactquestion_element.tsx ***!
        \*********************************************/

/*!*********************************************!*\
        !*** ./src/react/reactquestion_factory.tsx ***!
        \*********************************************/

/*!*********************************************!*\
        !*** ./src/react/reactquestion_ranking.tsx ***!
        \*********************************************/

/*!**********************************************!*\
        !*** ./src/react/components/popup/popup.tsx ***!
        \**********************************************/

/*!**********************************************!*\
        !*** ./src/react/reactquestion_checkbox.tsx ***!
        \**********************************************/

/*!**********************************************!*\
        !*** ./src/react/reactquestion_dropdown.tsx ***!
        \**********************************************/

/*!************************************************!*\
        !*** ./src/defaultCss/cssbootstrapmaterial.ts ***!
        \************************************************/

/*!************************************************!*\
        !*** ./src/localization/simplified-chinese.ts ***!
        \************************************************/

/*!************************************************!*\
        !*** ./src/react/reactquestion_expression.tsx ***!
        \************************************************/

/*!************************************************!*\
        !*** ./src/react/reactquestion_radiogroup.tsx ***!
        \************************************************/

/*!*************************************************!*\
        !*** ./src/localization/traditional-chinese.ts ***!
        \*************************************************/

/*!*************************************************!*\
        !*** ./src/react/reactSurveyNavigationBase.tsx ***!
        \*************************************************/

/*!*************************************************!*\
        !*** ./src/react/reactquestion_buttongroup.tsx ***!
        \*************************************************/

/*!**************************************************!*\
        !*** ./src/react/reactSurveyProgressButtons.tsx ***!
        \**************************************************/

/*!**************************************************!*\
        !*** ./src/react/reactquestion_multipletext.tsx ***!
        \**************************************************/

/*!**************************************************!*\
        !*** ./src/react/reactquestion_paneldynamic.tsx ***!
        \**************************************************/

/*!***************************************************!*\
        !*** ./src/react/reactquestion_matrixdynamic.tsx ***!
        \***************************************************/

/*!****************************************************!*\
        !*** ./src/react/components/svg-icon/svg-icon.tsx ***!
        \****************************************************/

/*!****************************************************!*\
        !*** ./src/react/reactquestion_matrixdropdown.tsx ***!
        \****************************************************/

/*!********************************************************!*\
        !*** ./src/react/components/action-bar/action-bar.tsx ***!
        \********************************************************/

/*!********************************************************!*\
        !*** ./src/react/reactquestion_matrixdropdownbase.tsx ***!
        \********************************************************/

/*!*********************************************************!*\
        !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
        \*********************************************************/

/*!***********************************************************!*\
        !*** ./node_modules/signature_pad/dist/signature_pad.mjs ***!
        \***********************************************************/

/*!*************************************************************!*\
        !*** ./src/react/components/action-bar/action-bar-item.tsx ***!
        \*************************************************************/

/*!**************************************************************!*\
        !*** ./src/react/components/default-title/default-title.tsx ***!
        \**************************************************************/

/*!**************************************************************!*\
        !*** ./src/react/components/title-actions/title-actions.tsx ***!
        \**************************************************************/

/*!**************************************************************!*\
        !*** ./src/react/components/title-content/title-content.tsx ***!
        \**************************************************************/

/*!******************************************************************!*\
        !*** ./src/react/components/action-bar/action-bar-separator.tsx ***!
        \******************************************************************/

/*!**********************************************************************!*\
        !*** ./src/react/components/action-bar/action-bar-item-dropdown.tsx ***!
        \**********************************************************************/

/*!*****************************************************************************!*\
        !*** ./src/react/components/matrix-actions/detail-button/detail-button.tsx ***!
        \*****************************************************************************/

/*!*****************************************************************************!*\
        !*** ./src/react/components/matrix-actions/remove-button/remove-button.tsx ***!
        \*****************************************************************************/

/*!**************************************************************************************!*\
        !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
        \**************************************************************************************/

/*!*****************************************************************************************************!*\
        !*** external {"root":"ReactDOM","commonjs2":"react-dom","commonjs":"react-dom","amd":"react-dom"} ***!
        \*****************************************************************************************************/

/**
         * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
         * @summary HTML2Canvas recording into video WebM.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef CanvasRecorder
         * @class
         * @example
         * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
         * @param {object} config - {disableLogs:true, initCallback: function}
         */

/**
         * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
         * @summary Writing blobs into IndexedDB.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @example
         * DiskStorage.Store({
         *     audioBlob: yourAudioBlob,
         *     videoBlob: yourVideoBlob,
         *     gifBlob  : yourGifBlob
         * });
         * DiskStorage.Fetch(function(dataURL, type) {
         *     if(type === 'audioBlob') { }
         *     if(type === 'videoBlob') { }
         *     if(type === 'gifBlob')   { }
         * });
         * // DiskStorage.dataStoreName = 'recordRTC';
         * // DiskStorage.onError = function(error) { };
         * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
         * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
         * @property {function} Store - This method stores blobs in IndexedDB.
         * @property {function} onError - This function is invoked for any known/unknown error.
         * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         */

/**
         * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef GifRecorder
         * @class
         * @example
         * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
         * recorder.record();
         * recorder.stop(function(blob) {
         *     img.src = URL.createObjectURL(blob);
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
         * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
         */

/**
         * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
         * @summary MRecordRTC stands for "Multiple-RecordRTC".
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef MRecordRTC
         * @class
         * @example
         * var recorder = new MRecordRTC();
         * recorder.addStream(MediaStream);
         * recorder.mediaType = {
         *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
         *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder
         *     gif: true    // or GifRecorder
         * };
         * // mimeType is optional and should be set only in advance cases.
         * recorder.mimeType = {
         *     audio: 'audio/wav',
         *     video: 'video/webm',
         *     gif:   'image/gif'
         * };
         * recorder.startRecording();
         * @see For further information:
         * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @requires {@link RecordRTC}
         */

/**
         * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
         * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://github.com/muaz-khan|Muaz Khan}
         * @typedef MediaStreamRecorder
         * @class
         * @example
         * var config = {
         *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
         *     audioBitsPerSecond : 256 * 8 * 1024,
         *     videoBitsPerSecond : 256 * 8 * 1024,
         *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
         *     checkForInactiveTracks: true,
         *     timeSlice: 1000, // concatenate intervals based blobs
         *     ondataavailable: function() {} // get intervals based blobs
         * }
         * var recorder = new MediaStreamRecorder(mediaStream, config);
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         *
         *     // or
         *     var blob = recorder.blob;
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
         * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
         */

/**
         * MultiStreamRecorder can record multiple videos in single container.
         * @summary Multi-videos recorder.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef MultiStreamRecorder
         * @class
         * @example
         * var options = {
         *     mimeType: 'video/webm'
         * }
         * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         *
         *     // or
         *     var blob = recorder.blob;
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStreams} mediaStreams - Array of MediaStreams.
         * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
         */

/**
         * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
         * @summary Promises for {@link RecordRTC}
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef RecordRTCPromisesHandler
         * @class
         * @example
         * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
         * recorder.startRecording()
         *         .then(successCB)
         *         .catch(errorCB);
         * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
         * recorder.recordRTC.onStateChanged = function(state) {};
         * recorder.recordRTC.setRecordingDuration(5000);
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
         * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
         * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
         * @requires {@link RecordRTC}
         */

/**
         * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
         * @summary JavaScript standalone object for stereo audio recording.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef StereoAudioRecorder
         * @class
         * @example
         * var recorder = new StereoAudioRecorder(MediaStream, {
         *     sampleRate: 44100,
         *     bufferSize: 4096
         * });
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
         */

/**
         * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @example
         * Storage.AudioContext === webkitAudioContext
         * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         */

/**
         * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.
         * @summary Video recording feature in Chrome, Firefox and maybe Edge.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef WebAssemblyRecorder
         * @class
         * @example
         * var recorder = new WebAssemblyRecorder(mediaStream);
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024}
         */

/**
         * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
         * @summary A real time javascript webm encoder based on a canvas hack.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef Whammy
         * @class
         * @example
         * var recorder = new Whammy().Video(15);
         * recorder.add(context || canvas || dataURL);
         * var output = recorder.compile();
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         */

/**
         * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
         * @summary Video recording feature in Chrome.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef WhammyRecorder
         * @class
         * @example
         * var recorder = new WhammyRecorder(mediaStream);
         * recorder.record();
         * recorder.stop(function(blob) {
         *     video.src = URL.createObjectURL(blob);
         * });
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
         */

/**
         * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
         * @summary It returns best recorder-type available for your browser.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef GetRecorderType
         * @class
         * @example
         * var RecorderType = GetRecorderType(options);
         * var recorder = new RecorderType(options);
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
         */

/**
         * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
         * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef RecordRTCConfiguration
         * @class
         * @example
         * var options = RecordRTCConfiguration(mediaStream, options);
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
         * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
         */

/**
         * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
         * @summary Record audio, video or screen inside the browser.
         * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
         * @author {@link https://MuazKhan.com|Muaz Khan}
         * @typedef RecordRTC
         * @class
         * @example
         * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
         *     type: 'video', // audio or video or gif or canvas
         *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
         * });
         * recorder.startRecording();
         * @see For further information:
         * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
         * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
         * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
         */

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */

/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v0.26.2
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**!
         * Sortable 1.13.0
         * @author	RubaXa   <trash@rubaxa.org>
         * @author	owenm    <owen23355@gmail.com>
         * @license MIT
         */

/**!
 * Sortable 1.13.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
